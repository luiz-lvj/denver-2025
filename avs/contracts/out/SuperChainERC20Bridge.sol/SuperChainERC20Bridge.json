{
    "abi": [
        {
            "type": "function",
            "name": "afterTaskSubmission",
            "inputs": [
                {
                    "name": "_taskInfo",
                    "type": "tuple",
                    "internalType": "struct IAttestationCenter.TaskInfo",
                    "components": [
                        {
                            "name": "proofOfTask",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "taskPerformer",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "taskDefinitionId",
                            "type": "uint16",
                            "internalType": "uint16"
                        }
                    ]
                },
                {
                    "name": "_isApproved",
                    "type": "bool",
                    "internalType": "bool"
                },
                {
                    "name": "_tpSignature",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "_taSignature",
                    "type": "uint256[2]",
                    "internalType": "uint256[2]"
                },
                {
                    "name": "_attestersIds",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeTaskSubmission",
            "inputs": [
                {
                    "name": "_taskInfo",
                    "type": "tuple",
                    "internalType": "struct IAttestationCenter.TaskInfo",
                    "components": [
                        {
                            "name": "proofOfTask",
                            "type": "string",
                            "internalType": "string"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "taskPerformer",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "taskDefinitionId",
                            "type": "uint16",
                            "internalType": "uint16"
                        }
                    ]
                },
                {
                    "name": "_isApproved",
                    "type": "bool",
                    "internalType": "bool"
                },
                {
                    "name": "_tpSignature",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "_taSignature",
                    "type": "uint256[2]",
                    "internalType": "uint256[2]"
                },
                {
                    "name": "_attestersIds",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "bridgeERC20AndCreateTask",
            "inputs": [
                {
                    "name": "_token",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_amount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_chainId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "CreateTaskSendERC20",
            "inputs": [
                {
                    "name": "sourceChainId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "token",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "destinationChainId",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "msgHash",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "0x6080604052348015600e575f5ffd5b506104338061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c8063502f5bd014610043578063dd1a538714610043578063fcde44a31461005c575b5f5ffd5b61005a6100513660046102c5565b50505050505050565b005b61005a61006a366004610387565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303815f875af11580156100ba573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100de91906103c4565b504681036101245760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590818da185a5b9259608a1b604482015260640160405180910390fd5b604051631834867b60e31b81526001600160a01b038416600482015233602482015260448101839052606481018290525f90737cfbd302f1f8e02347862641973792cbd60c453f9063c1a433d8906084016020604051808303815f875af1158015610191573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101b591906103e6565b6040805133808252602082015290810185905260608101849052608081018290529091506001600160a01b0385169046907f2f0331e9e6ae0b6e79a0f08c7b69e375fd5a685cb53a26029dbc8554e27687009060a00160405180910390a350505050565b8015158114610226575f5ffd5b50565b5f5f83601f840112610239575f5ffd5b50813567ffffffffffffffff811115610250575f5ffd5b602083019150836020828501011115610267575f5ffd5b9250929050565b806040810183101561027e575f5ffd5b92915050565b5f5f83601f840112610294575f5ffd5b50813567ffffffffffffffff8111156102ab575f5ffd5b6020830191508360208260051b8501011115610267575f5ffd5b5f5f5f5f5f5f5f60c0888a0312156102db575f5ffd5b873567ffffffffffffffff8111156102f1575f5ffd5b88016080818b031215610302575f5ffd5b9650602088013561031281610219565b9550604088013567ffffffffffffffff81111561032d575f5ffd5b6103398a828b01610229565b909650945061034d90508960608a0161026e565b925060a088013567ffffffffffffffff811115610368575f5ffd5b6103748a828b01610284565b989b979a50959850939692959293505050565b5f5f5f60608486031215610399575f5ffd5b83356001600160a01b03811681146103af575f5ffd5b95602085013595506040909401359392505050565b5f602082840312156103d4575f5ffd5b81516103df81610219565b9392505050565b5f602082840312156103f6575f5ffd5b505191905056fea264697066735822122000486e969d335fa26308e74f07c440c035987c933695b7c4c01081223342c77664736f6c634300081b0033",
        "sourceMap": "361:1431:30:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f5ffd5b506004361061003f575f3560e01c8063502f5bd014610043578063dd1a538714610043578063fcde44a31461005c575b5f5ffd5b61005a6100513660046102c5565b50505050505050565b005b61005a61006a366004610387565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303815f875af11580156100ba573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100de91906103c4565b504681036101245760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590818da185a5b9259608a1b604482015260640160405180910390fd5b604051631834867b60e31b81526001600160a01b038416600482015233602482015260448101839052606481018290525f90737cfbd302f1f8e02347862641973792cbd60c453f9063c1a433d8906084016020604051808303815f875af1158015610191573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101b591906103e6565b6040805133808252602082015290810185905260608101849052608081018290529091506001600160a01b0385169046907f2f0331e9e6ae0b6e79a0f08c7b69e375fd5a685cb53a26029dbc8554e27687009060a00160405180910390a350505050565b8015158114610226575f5ffd5b50565b5f5f83601f840112610239575f5ffd5b50813567ffffffffffffffff811115610250575f5ffd5b602083019150836020828501011115610267575f5ffd5b9250929050565b806040810183101561027e575f5ffd5b92915050565b5f5f83601f840112610294575f5ffd5b50813567ffffffffffffffff8111156102ab575f5ffd5b6020830191508360208260051b8501011115610267575f5ffd5b5f5f5f5f5f5f5f60c0888a0312156102db575f5ffd5b873567ffffffffffffffff8111156102f1575f5ffd5b88016080818b031215610302575f5ffd5b9650602088013561031281610219565b9550604088013567ffffffffffffffff81111561032d575f5ffd5b6103398a828b01610229565b909650945061034d90508960608a0161026e565b925060a088013567ffffffffffffffff811115610368575f5ffd5b6103748a828b01610284565b989b979a50959850939692959293505050565b5f5f5f60608486031215610399575f5ffd5b83356001600160a01b03811681146103af575f5ffd5b95602085013595506040909401359392505050565b5f602082840312156103d4575f5ffd5b81516103df81610219565b9392505050565b5f602082840312156103f6575f5ffd5b505191905056fea264697066735822122000486e969d335fa26308e74f07c440c035987c933695b7c4c01081223342c77664736f6c634300081b0033",
        "sourceMap": "361:1431:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1499:291;;;;;;:::i;:::-;;;;;;;;;;;685:510;;;;;;:::i;:::-;820:63;;-1:-1:-1;;;820:63:30;;848:10;820:63;;;3039:51:33;868:4:30;3106:18:33;;;3099:60;3175:18;;;3168:34;;;-1:-1:-1;;;;;820:27:30;;;;;3012:18:33;;820:63:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;922:13;910:8;:25;902:53;;;;-1:-1:-1;;;902:53:30;;3665:2:33;902:53:30;;;3647:21:33;3704:2;3684:18;;;3677:30;-1:-1:-1;;;3723:18:33;;;3716:45;3778:18;;902:53:30;;;;;;;;983:96;;-1:-1:-1;;;983:96:30;;-1:-1:-1;;;;;4056:32:33;;983:96:30;;;4038:51:33;1049:10:30;4105:18:33;;;4098:60;4174:18;;;4167:34;;;4217:18;;;4210:34;;;965:15:30;;463:42;;983:57;;4010:19:33;;983:96:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1095:93;;;1138:10;4703:51:33;;;4785:2;4770:18;;4763:60;4839:18;;;4832:34;;;4897:2;4882:18;;4875:34;;;4940:3;4925:19;;4918:35;;;965:114:30;;-1:-1:-1;;;;;;1095:93:30;;;1115:13;;1095:93;;4690:3:33;4675:19;1095:93:30;;;;;;;809:386;685:510;;;:::o;14:118:33:-;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;66:60;14:118;:::o;137:347::-;188:8;198:6;252:3;245:4;237:6;233:17;229:27;219:55;;270:1;267;260:12;219:55;-1:-1:-1;293:20:33;;336:18;325:30;;322:50;;;368:1;365;358:12;322:50;405:4;397:6;393:17;381:29;;457:3;450:4;441:6;433;429:19;425:30;422:39;419:59;;;474:1;471;464:12;419:59;137:347;;;;;:::o;489:159::-;583:6;616:2;604:15;;601:24;-1:-1:-1;598:44:33;;;638:1;635;628:12;598:44;489:159;;;;:::o;653:367::-;716:8;726:6;780:3;773:4;765:6;761:17;757:27;747:55;;798:1;795;788:12;747:55;-1:-1:-1;821:20:33;;864:18;853:30;;850:50;;;896:1;893;886:12;850:50;933:4;925:6;921:17;909:29;;993:3;986:4;976:6;973:1;969:14;961:6;957:27;953:38;950:47;947:67;;;1010:1;1007;1000:12;1025:1276;1208:6;1216;1224;1232;1240;1248;1256;1309:3;1297:9;1288:7;1284:23;1280:33;1277:53;;;1326:1;1323;1316:12;1277:53;1366:9;1353:23;1399:18;1391:6;1388:30;1385:50;;;1431:1;1428;1421:12;1385:50;1454:22;;1510:3;1492:16;;;1488:26;1485:46;;;1527:1;1524;1517:12;1485:46;1550:2;-1:-1:-1;1602:2:33;1587:18;;1574:32;1615:28;1574:32;1615:28;:::i;:::-;1662:5;-1:-1:-1;1720:2:33;1705:18;;1692:32;1749:18;1736:32;;1733:52;;;1781:1;1778;1771:12;1733:52;1820:60;1872:7;1861:8;1850:9;1846:24;1820:60;:::i;:::-;1899:8;;-1:-1:-1;1794:86:33;-1:-1:-1;1953:62:33;;-1:-1:-1;2007:7:33;2002:2;1987:18;;1953:62;:::i;:::-;1943:72;;2068:3;2057:9;2053:19;2040:33;2098:18;2088:8;2085:32;2082:52;;;2130:1;2127;2120:12;2082:52;2169:72;2233:7;2222:8;2211:9;2207:24;2169:72;:::i;:::-;1025:1276;;;;-1:-1:-1;1025:1276:33;;-1:-1:-1;1025:1276:33;;;;2143:98;;-1:-1:-1;;;1025:1276:33:o;2306:526::-;2383:6;2391;2399;2452:2;2440:9;2431:7;2427:23;2423:32;2420:52;;;2468:1;2465;2458:12;2420:52;2494:23;;-1:-1:-1;;;;;2546:31:33;;2536:42;;2526:70;;2592:1;2589;2582:12;2526:70;2615:5;2693:2;2678:18;;2665:32;;-1:-1:-1;2796:2:33;2781:18;;;2768:32;;2306:526;-1:-1:-1;;;2306:526:33:o;3213:245::-;3280:6;3333:2;3321:9;3312:7;3308:23;3304:32;3301:52;;;3349:1;3346;3339:12;3301:52;3381:9;3375:16;3400:28;3422:5;3400:28;:::i;:::-;3447:5;3213:245;-1:-1:-1;;;3213:245:33:o;4255:184::-;4325:6;4378:2;4366:9;4357:7;4353:23;4349:32;4346:52;;;4394:1;4391;4384:12;4346:52;-1:-1:-1;4417:16:33;;4255:184;-1:-1:-1;4255:184:33:o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "afterTaskSubmission((string,bytes,address,uint16),bool,bytes,uint256[2],uint256[])": "dd1a5387",
        "beforeTaskSubmission((string,bytes,address,uint16),bool,bytes,uint256[2],uint256[])": "502f5bd0",
        "bridgeERC20AndCreateTask(address,uint256,uint256)": "fcde44a3"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sourceChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"CreateTaskSendERC20\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"proofOfTask\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"taskPerformer\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"taskDefinitionId\",\"type\":\"uint16\"}],\"internalType\":\"struct IAttestationCenter.TaskInfo\",\"name\":\"_taskInfo\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"_isApproved\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_tpSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256[2]\",\"name\":\"_taSignature\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[]\",\"name\":\"_attestersIds\",\"type\":\"uint256[]\"}],\"name\":\"afterTaskSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"proofOfTask\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"taskPerformer\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"taskDefinitionId\",\"type\":\"uint16\"}],\"internalType\":\"struct IAttestationCenter.TaskInfo\",\"name\":\"_taskInfo\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"_isApproved\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_tpSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256[2]\",\"name\":\"_taSignature\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[]\",\"name\":\"_attestersIds\",\"type\":\"uint256[]\"}],\"name\":\"beforeTaskSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"}],\"name\":\"bridgeERC20AndCreateTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SuperChainERC20Bridge.sol\":\"SuperChainERC20Bridge\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/core-contracts/lib/eigenlayer-middleware/src/\",\":@eigenlayer/=lib/core-contracts/lib/eigenlayer-contracts/src/\",\":@layerzerolabs/lz-evm-messagelib-v2/=lib/core-contracts/lib/LayerZero-v2/messagelib/\",\":@layerzerolabs/lz-evm-oapp-v2/=lib/core-contracts/lib/LayerZero-v2/oapp/\",\":@layerzerolabs/lz-evm-protocol-v2/=lib/core-contracts/lib/LayerZero-v2/protocol/\",\":@openzeppelin-upgradeable/=lib/core-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-upgrades-v4.9.0/=lib/core-contracts/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/core-contracts/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/core-contracts/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/contracts-upgradeable/=lib/core-contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@othentic-script/=lib/core-contracts/script/\",\":@othentic-test/=lib/core-contracts/test/\",\":@othentic/=lib/core-contracts/src/\",\":LayerZero-v2/=/\",\":core-contracts/=lib/core-contracts/src/\",\":ds-test/=lib/core-contracts/lib/eigenlayer-contracts/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/core-contracts/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/core-contracts/lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/core-contracts/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/core-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/core-contracts/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/core-contracts/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":solidity-bytes-utils/contracts/=lib/core-contracts/src/lz/util/\"]},\"sources\":{\"lib/core-contracts/src/NetworkManagement/Common/BLS.sol\":{\"keccak256\":\"0x1f70e3c9066d7156b1d685213d51c7a2399313d870e196ac5eba23d3a62efbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d305abc765b14649d57a0fdc991d4d4a48969d6c025ffd0c59ce3b785bb4eb8\",\"dweb:/ipfs/QmPRVRJN2VndTwKKCi3Z4WW2e2adiTxr2PcaGendquBDZV\"]},\"lib/core-contracts/src/NetworkManagement/Common/BLSAuthLibrary.sol\":{\"keccak256\":\"0x8853d299b672e7db79ecce1b1fae1795ed273d576b6763b46a40ae54cc600166\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://69d974d6bb8485685cb9940ff7b74e898a25b9a6bd991cebdb5581dcb19805f4\",\"dweb:/ipfs/QmSNPDtXWUuJsurHEg3zzavCTTfTWUqFmtpdQgoYgUV9Ti\"]},\"lib/core-contracts/src/NetworkManagement/Common/ModExp.sol\":{\"keccak256\":\"0x321e4b64919dd386569340445e6ce5e17f4a8bacbad1028e4c94f7a248058cc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d31dd352523d08b4456d2124d1bdde640508fbd05f7856906b6f2b81f0e48fc\",\"dweb:/ipfs/QmcLSgHpCeGMWLFpKzZJVbcvBZWjrxSqGFWG1rR3fKvrdL\"]},\"lib/core-contracts/src/NetworkManagement/Common/interfaces/IOBLS.sol\":{\"keccak256\":\"0x412cb5c42091ae2b86ea07b43f8e9e2aca7ac9f994e363d1a4ffc1e557cdb853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4440ba97c2f0a1c214bb6fde18ae7da249161e1a806ba1c229930abe15d2f0e4\",\"dweb:/ipfs/QmcLdD9gJp2qabRrL7mvwYsupgHDRHR17j2TEbq8qaP8ei\"]},\"lib/core-contracts/src/NetworkManagement/L2/TaskDefinitionLibrary.sol\":{\"keccak256\":\"0xcd359556e051c8014b23f1b6e31e9cf0c21be1351c2c711404fae54549835466\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://29ca6d7cecac81577915b86bbf5a8204e5cf13e49f770c6aa5660b20f455ee8e\",\"dweb:/ipfs/QmaiGeDiezkZ2bKw9pvivEuXYkgMsSSk4Vy7dVLTPzWQnh\"]},\"lib/core-contracts/src/NetworkManagement/L2/interfaces/IAttestationCenter.sol\":{\"keccak256\":\"0xab15095020d31ce424f0e33bc922251160e2e3b4ffb8f36cc3bb9dcb4c5b7dda\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdce9bbcea59ff9076bdd0b4c92df5d0ddb847a42e51ea7d9817b580002eb147\",\"dweb:/ipfs/QmW9yRs6bewc8dysjb3Zw1syMdf8kVnZjTb7d1NgswwmCX\"]},\"lib/core-contracts/src/NetworkManagement/L2/interfaces/IAvsLogic.sol\":{\"keccak256\":\"0xd8b6ef9578616e0138486b241b2fd6e43607f6c38dd55addccb61882580417d2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://75661aceaebffdbac611f3a512c1065c049f61b5739c8c894a61ff505b2b5e4b\",\"dweb:/ipfs/QmQb91xPYDYJGgbrHBJ4PHbNsJExVVFjJWtmSHFSosyf81\"]},\"lib/core-contracts/src/NetworkManagement/L2/interfaces/IBeforePaymentsLogic.sol\":{\"keccak256\":\"0x9e251dd7546fefdf371e331eea9470bb758a888fcf3c9c23489ddfa353e28e25\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a310c630a99cc314c210f88cda3632443e100a440fb01b4facd6646362ea4911\",\"dweb:/ipfs/QmXn7YyzQP5h4x3KhpoaonjUqbsF41QkfXc6Q2fxhsV69T\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"src/SuperChainERC20Bridge.sol\":{\"keccak256\":\"0x074c9d3ff37da717297c19fe1c10bf3c0211d6bd586b5caf205597c539eb1476\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://71889eaa37044ff4fdd0bcccbe8af0832c08f9c056cd212f0a847e11cc0232ab\",\"dweb:/ipfs/QmUBKZ5TwQMczgvLv43FaVECJYHy8HHLT3pG253F3gnHjw\"]},\"src/interfaces/ISuperChainTokenBridge.sol\":{\"keccak256\":\"0x8d7826d2a5690c15728cb8900a9c5426866f62e1f40ba1cfb251ce272da85c03\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://eb8bd4e17fade6efb63d6d162e80530bc4deed0b8bc62822c388215b51135da8\",\"dweb:/ipfs/QmdZkhsfz1bzzKNBE6mhYEfnSDqC9u7ZdsESUUTrudpVyW\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.27+commit.40a35a09"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "sourceChainId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "destinationChainId",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes32",
                            "name": "msgHash",
                            "type": "bytes32",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "CreateTaskSendERC20",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IAttestationCenter.TaskInfo",
                            "name": "_taskInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "string",
                                    "name": "proofOfTask",
                                    "type": "string"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "address",
                                    "name": "taskPerformer",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint16",
                                    "name": "taskDefinitionId",
                                    "type": "uint16"
                                }
                            ]
                        },
                        {
                            "internalType": "bool",
                            "name": "_isApproved",
                            "type": "bool"
                        },
                        {
                            "internalType": "bytes",
                            "name": "_tpSignature",
                            "type": "bytes"
                        },
                        {
                            "internalType": "uint256[2]",
                            "name": "_taSignature",
                            "type": "uint256[2]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "_attestersIds",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterTaskSubmission"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IAttestationCenter.TaskInfo",
                            "name": "_taskInfo",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "string",
                                    "name": "proofOfTask",
                                    "type": "string"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "address",
                                    "name": "taskPerformer",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint16",
                                    "name": "taskDefinitionId",
                                    "type": "uint16"
                                }
                            ]
                        },
                        {
                            "internalType": "bool",
                            "name": "_isApproved",
                            "type": "bool"
                        },
                        {
                            "internalType": "bytes",
                            "name": "_tpSignature",
                            "type": "bytes"
                        },
                        {
                            "internalType": "uint256[2]",
                            "name": "_taSignature",
                            "type": "uint256[2]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "_attestersIds",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeTaskSubmission"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_token",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_amount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_chainId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "bridgeERC20AndCreateTask"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {},
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@eigenlayer-middleware/=lib/core-contracts/lib/eigenlayer-middleware/src/",
                "@eigenlayer/=lib/core-contracts/lib/eigenlayer-contracts/src/",
                "@layerzerolabs/lz-evm-messagelib-v2/=lib/core-contracts/lib/LayerZero-v2/messagelib/",
                "@layerzerolabs/lz-evm-oapp-v2/=lib/core-contracts/lib/LayerZero-v2/oapp/",
                "@layerzerolabs/lz-evm-protocol-v2/=lib/core-contracts/lib/LayerZero-v2/protocol/",
                "@openzeppelin-upgradeable/=lib/core-contracts/lib/openzeppelin-contracts-upgradeable/",
                "@openzeppelin-upgrades-v4.9.0/=lib/core-contracts/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/",
                "@openzeppelin-upgrades/=lib/core-contracts/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/",
                "@openzeppelin-v4.9.0/=lib/core-contracts/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/",
                "@openzeppelin/contracts-upgradeable/=lib/core-contracts/lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "@othentic-script/=lib/core-contracts/script/",
                "@othentic-test/=lib/core-contracts/test/",
                "@othentic/=lib/core-contracts/src/",
                "LayerZero-v2/=/",
                "core-contracts/=lib/core-contracts/src/",
                "ds-test/=lib/core-contracts/lib/eigenlayer-contracts/lib/ds-test/src/",
                "eigenlayer-contracts/=lib/core-contracts/lib/eigenlayer-contracts/",
                "eigenlayer-middleware/=lib/core-contracts/lib/eigenlayer-middleware/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "openzeppelin-contracts-upgradeable-v4.9.0/=lib/core-contracts/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/",
                "openzeppelin-contracts-upgradeable/=lib/core-contracts/lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts-v4.9.0/=lib/core-contracts/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "openzeppelin/=lib/core-contracts/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
                "solidity-bytes-utils/contracts/=lib/core-contracts/src/lz/util/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/SuperChainERC20Bridge.sol": "SuperChainERC20Bridge"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/core-contracts/src/NetworkManagement/Common/BLS.sol": {
                "keccak256": "0x1f70e3c9066d7156b1d685213d51c7a2399313d870e196ac5eba23d3a62efbd5",
                "urls": [
                    "bzz-raw://0d305abc765b14649d57a0fdc991d4d4a48969d6c025ffd0c59ce3b785bb4eb8",
                    "dweb:/ipfs/QmPRVRJN2VndTwKKCi3Z4WW2e2adiTxr2PcaGendquBDZV"
                ],
                "license": "MIT"
            },
            "lib/core-contracts/src/NetworkManagement/Common/BLSAuthLibrary.sol": {
                "keccak256": "0x8853d299b672e7db79ecce1b1fae1795ed273d576b6763b46a40ae54cc600166",
                "urls": [
                    "bzz-raw://69d974d6bb8485685cb9940ff7b74e898a25b9a6bd991cebdb5581dcb19805f4",
                    "dweb:/ipfs/QmSNPDtXWUuJsurHEg3zzavCTTfTWUqFmtpdQgoYgUV9Ti"
                ],
                "license": "BUSL-1.1"
            },
            "lib/core-contracts/src/NetworkManagement/Common/ModExp.sol": {
                "keccak256": "0x321e4b64919dd386569340445e6ce5e17f4a8bacbad1028e4c94f7a248058cc2",
                "urls": [
                    "bzz-raw://4d31dd352523d08b4456d2124d1bdde640508fbd05f7856906b6f2b81f0e48fc",
                    "dweb:/ipfs/QmcLSgHpCeGMWLFpKzZJVbcvBZWjrxSqGFWG1rR3fKvrdL"
                ],
                "license": "MIT"
            },
            "lib/core-contracts/src/NetworkManagement/Common/interfaces/IOBLS.sol": {
                "keccak256": "0x412cb5c42091ae2b86ea07b43f8e9e2aca7ac9f994e363d1a4ffc1e557cdb853",
                "urls": [
                    "bzz-raw://4440ba97c2f0a1c214bb6fde18ae7da249161e1a806ba1c229930abe15d2f0e4",
                    "dweb:/ipfs/QmcLdD9gJp2qabRrL7mvwYsupgHDRHR17j2TEbq8qaP8ei"
                ],
                "license": "MIT"
            },
            "lib/core-contracts/src/NetworkManagement/L2/TaskDefinitionLibrary.sol": {
                "keccak256": "0xcd359556e051c8014b23f1b6e31e9cf0c21be1351c2c711404fae54549835466",
                "urls": [
                    "bzz-raw://29ca6d7cecac81577915b86bbf5a8204e5cf13e49f770c6aa5660b20f455ee8e",
                    "dweb:/ipfs/QmaiGeDiezkZ2bKw9pvivEuXYkgMsSSk4Vy7dVLTPzWQnh"
                ],
                "license": "BUSL-1.1"
            },
            "lib/core-contracts/src/NetworkManagement/L2/interfaces/IAttestationCenter.sol": {
                "keccak256": "0xab15095020d31ce424f0e33bc922251160e2e3b4ffb8f36cc3bb9dcb4c5b7dda",
                "urls": [
                    "bzz-raw://cdce9bbcea59ff9076bdd0b4c92df5d0ddb847a42e51ea7d9817b580002eb147",
                    "dweb:/ipfs/QmW9yRs6bewc8dysjb3Zw1syMdf8kVnZjTb7d1NgswwmCX"
                ],
                "license": "BUSL-1.1"
            },
            "lib/core-contracts/src/NetworkManagement/L2/interfaces/IAvsLogic.sol": {
                "keccak256": "0xd8b6ef9578616e0138486b241b2fd6e43607f6c38dd55addccb61882580417d2",
                "urls": [
                    "bzz-raw://75661aceaebffdbac611f3a512c1065c049f61b5739c8c894a61ff505b2b5e4b",
                    "dweb:/ipfs/QmQb91xPYDYJGgbrHBJ4PHbNsJExVVFjJWtmSHFSosyf81"
                ],
                "license": "BUSL-1.1"
            },
            "lib/core-contracts/src/NetworkManagement/L2/interfaces/IBeforePaymentsLogic.sol": {
                "keccak256": "0x9e251dd7546fefdf371e331eea9470bb758a888fcf3c9c23489ddfa353e28e25",
                "urls": [
                    "bzz-raw://a310c630a99cc314c210f88cda3632443e100a440fb01b4facd6646362ea4911",
                    "dweb:/ipfs/QmXn7YyzQP5h4x3KhpoaonjUqbsF41QkfXc6Q2fxhsV69T"
                ],
                "license": "BUSL-1.1"
            },
            "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
                "keccak256": "0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606",
                "urls": [
                    "bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1",
                    "dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
                "urls": [
                    "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
                    "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
                ],
                "license": "MIT"
            },
            "src/SuperChainERC20Bridge.sol": {
                "keccak256": "0x074c9d3ff37da717297c19fe1c10bf3c0211d6bd586b5caf205597c539eb1476",
                "urls": [
                    "bzz-raw://71889eaa37044ff4fdd0bcccbe8af0832c08f9c056cd212f0a847e11cc0232ab",
                    "dweb:/ipfs/QmUBKZ5TwQMczgvLv43FaVECJYHy8HHLT3pG253F3gnHjw"
                ],
                "license": "UNLICENSED"
            },
            "src/interfaces/ISuperChainTokenBridge.sol": {
                "keccak256": "0x8d7826d2a5690c15728cb8900a9c5426866f62e1f40ba1cfb251ce272da85c03",
                "urls": [
                    "bzz-raw://eb8bd4e17fade6efb63d6d162e80530bc4deed0b8bc62822c388215b51135da8",
                    "dweb:/ipfs/QmdZkhsfz1bzzKNBE6mhYEfnSDqC9u7ZdsESUUTrudpVyW"
                ],
                "license": "UNLICENSED"
            }
        },
        "version": 1
    },
    "id": 30
}